CLASS zcl_nd_mss_time_approval DEFINITION
  PUBLIC
  CREATE PUBLIC .
  PUBLIC SECTION.
    INTERFACES /neptune/if_nad_server.
    TYPES:
      BEGIN OF ty_catsdb_detail,
        counter      TYPE catscounte,
        pernr        TYPE pernr_d,
        catshours    TYPE catshours,
        workdate     TYPE catsdate,
        lgart        TYPE lgart,
        awart        TYPE awart,
        meinh        TYPE meinh,
        atext        TYPE string,
        selected     TYPE string,
        text         TYPE string,
        beguz        TYPE catsbeguz,
        enduz        TYPE catsenduz,
        catsquantity TYPE catsnumber,
        unit         TYPE meinh,
        cost_type    TYPE string,
        cost_text1   TYPE string,
        cost_text2   TYPE string,
      END OF ty_catsdb_detail .
    TYPES:
      BEGIN OF ty_catsdb_data,
        counter   TYPE catscounte,
        pernr     TYPE pernr_d,
        name      TYPE string,
        catshours TYPE int4,
        selected  TYPE string,
        text      TYPE string,
        icon      TYPE string,
        jobtxt    TYPE string,
      END OF ty_catsdb_data .
    TYPES: BEGIN OF ty_catsdb,
             counter        TYPE catscounte,
             pernr          TYPE pernr_d,
             workdate       TYPE catsdb-workdate,
             rkostl         TYPE catsdb-rkostl,
             awart          TYPE catsdb-awart,
             plans          TYPE catsdb-plans,
             status         TYPE catsdb-status,
             beguz          TYPE catsdb-beguz,
             enduz          TYPE catsdb-enduz,
             reason         TYPE catsdb-reason,
             prakn          TYPE catsdb-prakn,
             prakz          TYPE catsdb-prakz,
             rproj          TYPE catsdb-rproj,
*          beguz TYPE catsdb-beguz,
*          enduz TYPE catsdb-enduz,
             zzposition     TYPE catsdb-zzposition,
             zzpositiontext TYPE catsdb-zzpositiontext,
             zzapproverid   TYPE catsdb-zzapproverid,
             zzapprovername TYPE catsdb-zzapprovername,
             ename          TYPE pa0001-ename,
*          wostd type pa0007-wostd,
             wostd          TYPE string,
             week_number    TYPE scal-week,
             fullweek       TYPE string,
             totalhours     TYPE catsdb-catshours,
             approvebox     TYPE string,
             iconmessage    TYPE string,
             enablefield    TYPE boolean,
             index          TYPE sy-tabix,
             approveselect  TYPE boolean,
             rejectselect   TYPE boolean,
*          week_from type sy-datum,
*          week_to type sy-datum,
           END OF ty_catsdb .
    TYPES:
      BEGIN OF ty_catsdb_details,
        counter        TYPE catscounte,
        pernr          TYPE pernr_d,
        workdate       TYPE catsdb-workdate,
        rkostl         TYPE catsdb-rkostl,
        awart          TYPE catsdb-awart,
        beguz          TYPE catsdb-beguz,
        enduz          TYPE catsdb-enduz,
        reason         TYPE catsdb-reason,
        prakn          TYPE catsdb-prakn,
        rproj          TYPE catsdb-rproj,
        catshours      TYPE catsdb-catshours,
        ltxa1          TYPE catsdb-ltxa1,
        zzposition     TYPE catsdb-zzposition,
        zzpositiontext TYPE catsdb-zzpositiontext,
        zzapproverid   TYPE catsdb-zzapproverid,
        zzcostobjtext  TYPE catsdb-zzcostobjtext,
        zzapprovername TYPE catsdb-zzapprovername,
        laeda          TYPE catsdb-laeda,
        unit           TYPE catsdb-unit,
        status         TYPE catsdb-status,
        ename          TYPE pa0001-ename,
        ptext          TYPE t510t-ptext,
        approval       TYPE string,
        enablefield1   TYPE boolean,
        statustext     TYPE string,
        statuscolor    TYPE string,
        approveselect  TYPE boolean,
        rejectselect   TYPE boolean,
        lv_employee    TYPE string,
      END OF ty_catsdb_details .

    TYPES:
      BEGIN OF ty_combobox,
        value1 TYPE string,
      END OF ty_combobox .
    TYPES:
      BEGIN OF ty_status,
        message     TYPE string,
        parameter   TYPE string,
        messagetype TYPE symsgty,
        context     TYPE bal_s_cont,
      END OF ty_status .
    TYPES:
      BEGIN OF ty_inputs,
        dstart TYPE sy-datum,
        dend   TYPE sy-datum,
      END OF ty_inputs .

    DATA gv_inputs TYPE ty_inputs .
    DATA:
      it_status TYPE STANDARD TABLE OF ty_status .
    DATA:
      wa_status        LIKE LINE OF it_status .
    DATA lv_s TYPE sy-datum .
    DATA lv_e TYPE sy-datum .
    DATA:
      s_dates TYPE RANGE OF catsdb-workdate .
    DATA:
      w_dates LIKE LINE OF s_dates .
    DATA:
      it_catsdb TYPE STANDARD TABLE OF ty_catsdb .
    DATA wa_catsdb TYPE ty_catsdb .
    DATA:
      it_cats_details TYPE STANDARD TABLE OF ty_catsdb_details .
    DATA wa_cats_details TYPE ty_catsdb_details .
    DATA:
      it_approved_times TYPE STANDARD TABLE OF zess_time_report_table .
    DATA:
      it_combobox TYPE STANDARD TABLE OF ty_combobox .
    DATA wa_combobox TYPE ty_combobox .
    DATA:
      it_combobox1 TYPE STANDARD TABLE OF ty_combobox .
    DATA: it_list_data TYPE STANDARD TABLE OF ty_catsdb_details,
          wa_list_data LIKE LINE OF it_list_data.
    DATA t_neptune_messages TYPE STANDARD TABLE OF /neptune/message.
  PROTECTED SECTION.
private section.

  data WA_CATSDB_DATA type TY_CATSDB_DATA .
  data GV_HOST type STRING .

  methods POPULATE_DATA .
  methods POPULATE_DETAILS
    importing
      !AJAX_VALUE type STRING .
  methods GET_APPROVED_TIMES
    importing
      !AJAX_VALUE type STRING .
  methods SAVE
    importing
      !SERVER type ref to /NEPTUNE/CL_NAD_SERVER .
  methods SAVE_ALL
    importing
      !SERVER type ref to /NEPTUNE/CL_NAD_SERVER .
  methods COMBO_DATA .
  methods LIST_DETAILS .
  methods GET_TILE_NUMBER
    importing
      !SERVER type ref to /NEPTUNE/CL_NAD_SERVER .
ENDCLASS.



CLASS ZCL_ND_MSS_TIME_APPROVAL IMPLEMENTATION.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Public Method ZCL_ND_MSS_TIME_APPROVAL->/NEPTUNE/IF_NAD_SERVER~HANDLE_ON_AJAX
* +-------------------------------------------------------------------------------------------------+
* | [--->] APPLID                         TYPE        STRING
* | [--->] AJAX_ID                        TYPE        STRING
* | [--->] AJAX_VALUE                     TYPE        STRING
* | [--->] SERVER                         TYPE REF TO /NEPTUNE/CL_NAD_SERVER
* | [--->] REQUEST                        TYPE        /NEPTUNE/DATA_REQUEST
* | [<-->] NAVIGATION                     TYPE        /NEPTUNE/AJAX_NAVIGATION
* +--------------------------------------------------------------------------------------</SIGNATURE>
  METHOD /neptune/if_nad_server~handle_on_ajax.


    CASE ajax_id.
      WHEN 'POPULATE_DATA'.
        CALL METHOD populate_data( ).

      WHEN 'POPULATE_DETAILS'.
        CALL METHOD populate_details( ajax_value ).

      WHEN 'SAVE'.
        CALL METHOD save( server ).

      WHEN 'SAVE_ALL'.
        CALL METHOD save_all( server ).

      WHEN 'GET_APPROVED_TIMES'.
        CALL METHOD get_approved_times( ajax_value ).

      WHEN 'LIST_DETAILS'.
        CALL METHOD list_details( ).

      WHEN 'GET_TILE_NUMBER'.
        CALL METHOD get_tile_number( server ).


    ENDCASE.


  ENDMETHOD.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Public Method ZCL_ND_MSS_TIME_APPROVAL->/NEPTUNE/IF_NAD_SERVER~HANDLE_ON_SYNC_IN
* +-------------------------------------------------------------------------------------------------+
* | [--->] APPLID                         TYPE        STRING
* | [--->] LASTSYNCDATE                   TYPE        STRING
* | [--->] IT_SYNC_DATA                   TYPE        /NEPTUNE/SYNC_DATA_TT
* | [<---] EX_STATUS                      TYPE        /NEPTUNE/SYNC_HEADER
* +--------------------------------------------------------------------------------------</SIGNATURE>
  METHOD /neptune/if_nad_server~handle_on_sync_in.
  ENDMETHOD.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Private Method ZCL_ND_MSS_TIME_APPROVAL->COMBO_DATA
* +-------------------------------------------------------------------------------------------------+
* +--------------------------------------------------------------------------------------</SIGNATURE>
  METHOD combo_data.
    wa_combobox-value1 = 'Approve All'.
    APPEND wa_combobox TO it_combobox.
    CLEAR wa_combobox.
    wa_combobox-value1 = 'Reject All'.
    APPEND wa_combobox TO it_combobox.
    CLEAR wa_combobox.

    wa_combobox-value1 = 'Approve'.
    APPEND wa_combobox TO it_combobox1.
    CLEAR wa_combobox.
    wa_combobox-value1 = 'Reject'.
    APPEND wa_combobox TO it_combobox1.
    CLEAR wa_combobox.

  ENDMETHOD.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Private Method ZCL_ND_MSS_TIME_APPROVAL->GET_APPROVED_TIMES
* +-------------------------------------------------------------------------------------------------+
* | [--->] AJAX_VALUE                     TYPE        STRING
* +--------------------------------------------------------------------------------------</SIGNATURE>
  METHOD get_approved_times.

*Approved times for date range selected inside Individual approval screen
    DATA lv_pernr TYPE catsdb-pernr.
    lv_pernr = ajax_value.

    CALL FUNCTION 'ZESS_ENTERED_TIME'
      EXPORTING
        begin_date      = gv_inputs-dstart
        end_date        = gv_inputs-dend
        personnelnumber = lv_pernr
      TABLES
        time_table      = it_approved_times.

  ENDMETHOD.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Private Method ZCL_ND_MSS_TIME_APPROVAL->GET_TILE_NUMBER
* +-------------------------------------------------------------------------------------------------+
* | [--->] SERVER                         TYPE REF TO /NEPTUNE/CL_NAD_SERVER
* +--------------------------------------------------------------------------------------</SIGNATURE>
  METHOD get_tile_number.
    DATA: "tile type ref to /neptune/cl_nad_server,
      lv_pa0105 TYPE pa0105,
      lv_count  TYPE string.
    DATA : it_count TYPE STANDARD TABLE OF catsdb.

**Get employee number
*  select single *
*         from pa0105
*         into lv_pa0105
*         where usrty eq '0001'
*           and usrid eq sy-uname
*           and endda ge sy-datum
*           and begda le sy-datum.
*
*concatenate 'US' lv_pa0105-usrid into lv_pa0105-usrid.
*
**Get Released Records for catsdb
*    select * from catsdb into table it_count
*          where zzapproverid eq lv_pa0105-usrid
*          and  status eq '20'.

    CALL METHOD populate_data( ).

    DESCRIBE TABLE it_catsdb LINES lv_count.


    CALL METHOD server->api_tile_info
      EXPORTING
        number      = lv_count
        number_unit = 'Pending Timesheets'
*       info        =
*       info_state  =
*       title       =
*       indicator   =
        valuecolor  = 'Critical'
*       value1      =
*       value2      =
*       value3      =
*       color1      =
*       color2      =
*       color3      =
*       title1      =
*       title2      =
*       title3      =
*       content     =
*       footer      =
*       image       =
      .


  ENDMETHOD.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Private Method ZCL_ND_MSS_TIME_APPROVAL->LIST_DETAILS
* +-------------------------------------------------------------------------------------------------+
* +--------------------------------------------------------------------------------------</SIGNATURE>
  METHOD list_details.
    DATA: lv_usrid  TYPE pa0105-usrid,
          lv_usrid1 TYPE pa0105-usrid,
          lv_date   TYPE catsdb-apdat.

*Get employee number
    SELECT SINGLE usrid
           FROM pa0105
           INTO lv_usrid
           WHERE usrty EQ '0001'
             AND usrid EQ sy-uname
             AND endda GE sy-datum.
*           and begda le sy-datum.

    CONCATENATE 'US' lv_usrid INTO lv_usrid1.
    lv_date = sy-datum - 30.
*Get Approved/rejected Records
    SELECT
      counter
      pernr
      workdate
      rkostl
      awart
      beguz
      enduz
      reason
      prakn
      rproj
      catshours
      ltxa1
      zzposition
      zzpositiontext
      zzapproverid
      zzcostobjtext
      zzapprovername
      laeda
      unit
      status
       FROM catsdb INTO TABLE it_list_data
       WHERE zzapproverid EQ lv_usrid1
       AND  status IN ('30','40')
       AND laeda GE lv_date.

    DELETE it_list_data WHERE catshours EQ 0.
    SORT it_list_data BY laeda  DESCENDING.


    LOOP AT it_list_data INTO wa_list_data.

      SELECT SINGLE ename
              FROM pa0001
              INTO wa_list_data-ename
              WHERE pernr EQ wa_list_data-pernr
*             and begda <= sy-datum
                AND endda >= sy-datum.


      CALL FUNCTION 'CONVERSION_EXIT_ALPHA_OUTPUT'
        EXPORTING
          input  = wa_list_data-pernr
        IMPORTING
          output = wa_list_data-pernr.


      CONCATENATE  wa_list_data-ename ' (' wa_list_data-pernr ')' INTO wa_list_data-lv_employee.


      IF wa_list_data-status EQ '30'.
        wa_list_data-statustext = 'Approved'.
        wa_list_data-statuscolor = 'Success'.
      ELSE.
        wa_list_data-statustext = 'Rejected'.
        wa_list_data-statuscolor = 'Error'.
      ENDIF.
      MODIFY it_list_data FROM wa_list_data INDEX sy-tabix.
    ENDLOOP.


  ENDMETHOD.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Private Method ZCL_ND_MSS_TIME_APPROVAL->POPULATE_DATA
* +-------------------------------------------------------------------------------------------------+
* +--------------------------------------------------------------------------------------</SIGNATURE>
  METHOD populate_data.


    TYPES: BEGIN OF ty_total_hours,
             catshours TYPE catsdb-catshours,
           END OF ty_total_hours.


    DATA: lv_pa0105      TYPE pa0105,
          lv_ename       TYPE pa0001-ename,
          lv_wostd       TYPE pa0007-wostd,
          lv_week_number TYPE scal-week,
          lv_startdate   TYPE sy-datum,
          lv_enddate     TYPE sy-datum,
          lv_dayname     TYPE dtresr-weekday,
          lv_totalhours  TYPE catsdb-catshours,
          lv_position    TYPE pa0001-plans,
          lv_userid      TYPE zzapproverid,
          lv_username    TYPE zzapprovername,
          it_total_hours TYPE STANDARD TABLE OF ty_total_hours,
          wa_total_hours LIKE LINE OF it_total_hours.

*Get employee number
    SELECT SINGLE *
           FROM pa0105
           INTO lv_pa0105
           WHERE usrty EQ '0001'
             AND usrid EQ sy-uname
             AND endda GE sy-datum
             AND begda LE sy-datum.


    CONCATENATE 'US' lv_pa0105-usrid INTO lv_pa0105-usrid.

*Get Released Records from catsdb
    SELECT counter
           pernr
           workdate
           rkostl
           awart
           plans
           status
           beguz
           enduz
           reason
           prakn
           prakz
           rproj
           zzposition
           zzpositiontext
           zzapproverid
           zzapprovername
          FROM catsdb INTO TABLE it_catsdb
          WHERE zzapproverid EQ lv_pa0105-usrid
          AND  status EQ '20'.

    SORT it_catsdb BY workdate.
    LOOP AT it_catsdb INTO wa_catsdb.

*Get Employee Name
      SELECT SINGLE ename
             FROM pa0001
             INTO lv_ename
             WHERE pernr EQ wa_catsdb-pernr
               AND begda <= sy-datum
               AND endda >= sy-datum.

      wa_catsdb-ename = lv_ename.

* Get Weekly hours for employee
      SELECT SINGLE wostd FROM pa0007
        INTO lv_wostd
        WHERE pernr EQ wa_catsdb-pernr
           AND begda <= sy-datum
           AND endda >= sy-datum.

      wa_catsdb-wostd = lv_wostd.

*Get the week number for the week
      CALL FUNCTION 'DATE_GET_WEEK'
        EXPORTING
          date         = wa_catsdb-workdate
        IMPORTING
          week         = lv_week_number
        EXCEPTIONS
          date_invalid = 1
          OTHERS       = 2.
      wa_catsdb-week_number = lv_week_number+4.

*Get dayname for the date
      CALL FUNCTION 'DATE_TO_DAY'
        EXPORTING
          date    = wa_catsdb-workdate
        IMPORTING
          weekday = lv_dayname.

*Get Start and endDate of week - returns Monday and sunday
      CALL FUNCTION 'WEEK_GET_FIRST_DAY'
        EXPORTING
          week         = lv_week_number
        IMPORTING
          date         = lv_startdate
        EXCEPTIONS
          week_invalid = 1
          OTHERS       = 2.

*Setting friday as start date
      IF lv_dayname EQ 'Friday' OR lv_dayname EQ 'Sat.'.
        lv_startdate = lv_startdate + 5.
      ELSE.
        lv_startdate = lv_startdate - 2.
      ENDIF.

*Thrusday as endate
      lv_enddate = lv_startdate + 6.

      CONCATENATE lv_startdate lv_enddate INTO wa_catsdb-fullweek SEPARATED BY '-'.
*wa_catsdb-week_from = lv_startdate.
*wa_catsdb-week_to = lv_enddate.

      MODIFY it_catsdb FROM wa_catsdb INDEX sy-tabix.
    ENDLOOP.

    SORT it_catsdb BY fullweek pernr workdate.
    DELETE ADJACENT DUPLICATES FROM it_catsdb COMPARING pernr fullweek.
    CLEAR wa_catsdb.

*Getting total hours worked by each employee in a week

    LOOP AT it_catsdb INTO wa_catsdb.
      wa_catsdb-index = sy-tabix.
      SPLIT wa_catsdb-fullweek AT '-' INTO lv_s lv_e.

      w_dates-sign = 'I'.
      w_dates-option = 'BT'.
      w_dates-low = lv_s.
      w_dates-high = lv_e.
      APPEND w_dates TO s_dates.
      CLEAR w_dates.

*Get Hours for single Pernr
      SELECT catshours FROM catsdb INTO TABLE it_total_hours
        WHERE pernr EQ wa_catsdb-pernr
          AND workdate IN s_dates
          AND status EQ '20'
          AND zzapproverid EQ lv_pa0105-usrid.

      LOOP AT it_total_hours INTO wa_total_hours.
        lv_totalhours = lv_totalhours + wa_total_hours-catshours.
      ENDLOOP.

      wa_catsdb-totalhours = lv_totalhours.

* Setting Icon
      IF wa_catsdb-totalhours GT wa_catsdb-wostd.
        wa_catsdb-iconmessage = 'sap-icon://arrow-top'.
      ELSEIF wa_catsdb-totalhours LT wa_catsdb-wostd.
        wa_catsdb-iconmessage = 'sap-icon://arrow-bottom'.
      ELSE.
        wa_catsdb-iconmessage = 'sap-icon://favorite'.
      ENDIF.

*    CONCATENATE wa_catsdb-wostd ' H' INTO wa_catsdb-wostd.

      CLEAR: lv_totalhours,
             wa_total_hours.
      REFRESH:it_total_hours,
                s_dates.
      MODIFY it_catsdb FROM wa_catsdb.

    ENDLOOP.
  ENDMETHOD.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Private Method ZCL_ND_MSS_TIME_APPROVAL->POPULATE_DETAILS
* +-------------------------------------------------------------------------------------------------+
* | [--->] AJAX_VALUE                     TYPE        STRING
* +--------------------------------------------------------------------------------------</SIGNATURE>
  METHOD populate_details.
    DATA: lv_p      TYPE catsdb-pernr,
          lv_pa0105 TYPE pa0105.

*Get employee number
    SELECT SINGLE *
           FROM pa0105
           INTO lv_pa0105
           WHERE usrty EQ '0001'
             AND usrid EQ sy-uname
             AND endda GE sy-datum
             AND begda LE sy-datum.


    CONCATENATE 'US' lv_pa0105-usrid INTO lv_pa0105-usrid.

    SPLIT ajax_value AT '-' INTO lv_p
                                 lv_s
                                 lv_e.

    w_dates-sign = 'I'.
    w_dates-option = 'BT'.
    w_dates-low = lv_s.
    w_dates-high = lv_e.
    APPEND w_dates TO s_dates.
    CLEAR w_dates.


* Data for approved times selected week
    CALL FUNCTION 'ZESS_ENTERED_TIME'
      EXPORTING
        begin_date      = lv_s
        end_date        = lv_e
        personnelnumber = lv_p
      TABLES
        time_table      = it_approved_times.

*All entries from catsdb for individual table
    SELECT
      counter
      pernr
      workdate
      rkostl
      awart
      beguz
      enduz
      reason
      prakn
      rproj
      catshours
      ltxa1
      zzposition
      zzpositiontext
      zzapproverid
      zzcostobjtext
      zzapprovername
      laeda
      unit
      status
    FROM catsdb INTO TABLE it_cats_details
    WHERE pernr EQ lv_p
    AND zzapproverid EQ lv_pa0105-usrid
    AND workdate IN s_dates
    AND status EQ '20'.

    LOOP AT it_cats_details INTO wa_cats_details.

      SELECT SINGLE ename
           FROM pa0001
           INTO wa_cats_details-ename
           WHERE pernr EQ wa_cats_details-pernr
             AND begda <= sy-datum
             AND endda >= sy-datum.

      SELECT SINGLE ptext FROM t510t INTO wa_cats_details-ptext
        WHERE prakn EQ wa_cats_details-prakn.

      MODIFY it_cats_details FROM wa_cats_details INDEX sy-tabix.
    ENDLOOP.

    SORT it_cats_details BY workdate.


  ENDMETHOD.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Private Method ZCL_ND_MSS_TIME_APPROVAL->SAVE
* +-------------------------------------------------------------------------------------------------+
* | [--->] SERVER                         TYPE REF TO /NEPTUNE/CL_NAD_SERVER
* +--------------------------------------------------------------------------------------</SIGNATURE>
  METHOD save.

    DATA:gr_msg           TYPE REF TO cl_message_handler_catsxt,
         it_appr_in       TYPE cats_approval_in_tab,
         it_appr_out      TYPE cats_approval_out_tab,
         wa_appr_in       LIKE LINE OF it_appr_in,
         wa_appr_out      LIKE LINE OF it_appr_out,
         error            TYPE xfeld,
         lv_tabix         TYPE sy-tabix,
         lv_hours         TYPE text10,
         lv_pernr         TYPE string,
         messages         TYPE catsxt_message_itab,
         w_messages       LIKE LINE OF messages,
         neptune_messages TYPE /neptune/message,
         lv_message       TYPE bapi_msg,
         lv_msgv1         TYPE symsgv,
         lv_msgv2         TYPE symsgv,
         lv_msgv3         TYPE symsgv,
         lv_msgv4         TYPE symsgv.

*Build approval data
* loop at it_cats_details into wa_cats_details where approval is not initial.
    LOOP AT it_cats_details INTO wa_cats_details WHERE approveselect IS NOT INITIAL OR rejectselect IS NOT INITIAL.
      wa_appr_in-pernr         = wa_cats_details-pernr.
      wa_appr_in-counter       = wa_cats_details-counter.

      IF wa_cats_details-approveselect EQ 'X'.
        wa_appr_in-target_status = '30'.
      ENDIF.

      IF wa_cats_details-rejectselect EQ 'X'.
        wa_appr_in-target_status = '40'.
        wa_appr_in-reason = wa_cats_details-reason.
      ENDIF.

      APPEND wa_appr_in TO it_appr_in.
      CLEAR  wa_appr_in.

    ENDLOOP.

    CHECK it_appr_in IS NOT INITIAL.

    CREATE OBJECT gr_msg
      EXPORTING
        im_cumulate_messages = ' '.

    CALL FUNCTION 'CATS_APPROVAL'
      EXPORTING
        message_handler            = gr_msg
        auth_check                 = ' '
        records                    = it_appr_in
      IMPORTING
        processed_records          = it_appr_out
        record_error               = error
      EXCEPTIONS
        update_error               = 1
        number_range_error         = 2
        longtext_error             = 3
        message_handler_not_active = 4
        OTHERS                     = 5.

*Create Message
    IF sy-subrc EQ 0.
      messages = gr_msg->get_all( ).
      DELETE ADJACENT DUPLICATES FROM messages COMPARING msgno.
      LOOP AT messages INTO w_messages.
        neptune_messages-type = w_messages-msgty.
        neptune_messages-id = w_messages-msgid.
        neptune_messages-number = w_messages-msgno.

        IF neptune_messages-type EQ 'S'.
          COMMIT WORK.
        ENDIF.

        CALL FUNCTION 'MESSAGE_TEXT_BUILD'
          EXPORTING
            msgid               = neptune_messages-id
            msgnr               = neptune_messages-number
            msgv1               = lv_msgv1
            msgv2               = lv_msgv2
            msgv3               = lv_msgv3
            msgv4               = lv_msgv4
          IMPORTING
            message_text_output = lv_message.

        IF neptune_messages-number EQ '117'. "changing success message text to make it user friendly
          neptune_messages-message = 'Selected time entries have been approved'.
          neptune_messages-type = 'S'.
        ELSEIF neptune_messages-number EQ '118'.
          neptune_messages-message = 'Selected time entries have been rejected'.
          neptune_messages-type = 'S'.
        ELSE.
          neptune_messages-message = lv_message.
        ENDIF.
        APPEND neptune_messages TO t_neptune_messages.
      ENDLOOP.
    ENDIF.
  ENDMETHOD.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Private Method ZCL_ND_MSS_TIME_APPROVAL->SAVE_ALL
* +-------------------------------------------------------------------------------------------------+
* | [--->] SERVER                         TYPE REF TO /NEPTUNE/CL_NAD_SERVER
* +--------------------------------------------------------------------------------------</SIGNATURE>
  METHOD save_all.
    DATA: gr_msg      TYPE REF TO cl_message_handler_catsxt,
          it_appr_in  TYPE cats_approval_in_tab,
          it_appr_out TYPE cats_approval_out_tab,
          wa_appr_in  LIKE LINE OF it_appr_in,
          wa_appr_out LIKE LINE OF it_appr_out.

    DATA: lv_tabix TYPE sy-tabix,
          lv_hours TYPE text10,
          lv_pernr TYPE string.

    DATA it_temp TYPE STANDARD TABLE OF ty_catsdb_details.

    DATA: wa_status LIKE LINE OF it_status,
          lv_pa0105 TYPE pa0105.

*Get employee number
    SELECT SINGLE *
           FROM pa0105
           INTO lv_pa0105
           WHERE usrty EQ '0001'
             AND usrid EQ sy-uname
             AND endda GE sy-datum
             AND begda LE sy-datum.


    CONCATENATE 'US' lv_pa0105-usrid INTO lv_pa0105-usrid.


*Build approval data
* loop at it_catsdb into wa_catsdb where approvebox is not initial.
    LOOP AT it_catsdb INTO wa_catsdb WHERE approveselect IS NOT INITIAL
                                         OR rejectselect IS NOT INITIAL.

      SPLIT wa_catsdb-fullweek AT '-' INTO lv_s lv_e.
      w_dates-sign = 'I'.
      w_dates-option = 'BT'.
      w_dates-low = lv_s.
      w_dates-high = lv_e.
      APPEND w_dates TO s_dates.
      CLEAR w_dates.


      SELECT
         counter
         pernr
         workdate
         rkostl
         awart
         beguz
         enduz
         reason
         prakn
         rproj
         catshours
         ltxa1
         zzposition
         zzpositiontext
         zzapproverid
         zzcostobjtext
         zzapprovername
       FROM catsdb INTO TABLE it_cats_details
       WHERE pernr EQ wa_catsdb-pernr
       AND zzapproverid EQ lv_pa0105-usrid
       AND workdate IN s_dates
        AND status EQ '20'.


      LOOP AT it_cats_details INTO wa_cats_details.

        IF wa_catsdb-approveselect EQ 'X'.
          wa_cats_details-approveselect = 'X'.
        ENDIF.

        IF wa_catsdb-rejectselect EQ 'X'.
          wa_cats_details-rejectselect = 'X'.
          wa_cats_details-reason = wa_catsdb-reason.
        ENDIF.

        MODIFY it_cats_details FROM wa_cats_details.
      ENDLOOP.

      CALL METHOD save( server ).
      CLEAR: wa_cats_details, it_cats_details.

    ENDLOOP.

    CALL METHOD populate_data( ).
  ENDMETHOD.
ENDCLASS.